@page "/palpites"
@inject HttpClient Http

<PageTitle>Palpites</PageTitle>

<h1>Palpites</h1>

@if (groups == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div class="row">
        @foreach (var group in groups)
        {
            <div class="col-6">
                <table class="grupo">
                    <thead>
                        <b>@group.Name</b>
                        <tr>
                            @foreach (var match in @group.Matches)
                            {
                                <th><button class="btn btn-primary" @onclick="() => LoadBets(match.GameKey, match.GameTitle)"><img src="@match.Team1" width="20" height="20" /> x <img src="@match.Team2" width="20" height="20" /></button></th>
                            }
                        </tr>
                    </thead>
                </table>
            </div>
        }
    </div>

    <GameBets @ref="GameBetsComponent" />
}

@code {

    protected GameBets GameBetsComponent;
    private GroupMatches[]? groups;

    protected override async Task OnInitializedAsync()
    {
        groups = await Http.GetFromJsonAsync<GroupMatches[]>("data/groups_and_matches.json");
    }

    private async Task LoadBets(string gameKey, string gameTitle)
    {
        await GameBetsComponent.Refresh(gameKey, gameTitle);
    }

    public class GroupMatches
    {
        public string Name { get; set; }
        public List<Match> Matches { get; set; }
    }

    public class Match
    {
        public string Team1 { get; set; }
        public string Team2 { get; set; }
        public string GameKey { get; set; }
        public string GameTitle { get; set; }
    }
}
